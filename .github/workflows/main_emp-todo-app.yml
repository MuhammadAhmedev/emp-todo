# name: Build and deploy Next.js app to Azure Web App

# on:
#   push:
#     branches:
#       - main
#   workflow_dispatch:

# jobs:
#   build:
#     runs-on: windows-latest

#     steps:
#       # Step 1: Checkout the code
#       - uses: actions/checkout@v4

#       # Step 2: Set up Node.js
#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: '20.x'

#       # Step 3: Install dependencies, build, and run tests
#       - name: Install dependencies, build, and test
#         run: |  
#           npm install
#           npm run build
#           npm test

#       # Step 4: Compress .next folder
#       - name: Compress .next folder
#         shell: pwsh
#         run: |
#           Remove-Item -Force -Recurse -ErrorAction Ignore next.zip
#           $sourcePath = Join-Path (Get-Location) '.next'
#           $zipPath = Join-Path (Get-Location) 'next.zip'

#           # Ensure the .next folder exists
#           if (Test-Path $sourcePath) {
#               [System.IO.Compression.ZipFile]::CreateFromDirectory($sourcePath, $zipPath)
#           } else {
#               Write-Error "Build folder does not exist: $sourcePath"
#               exit 1
#           }

#       # Step 5: Upload compressed artifact for deployment job
#       - name: Upload artifact
#         uses: actions/upload-artifact@v4
#         with:
#           name: build-artifact
#           path: next.zip

#   deploy:
#     runs-on: ubuntu-latest
#     needs: build
#     environment:
#       name: 'Production'
#       url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
#     permissions:
#       id-token: write

#     steps:
#       # Step 6: Download the build artifact
#       - name: Download artifact from build job
#         uses: actions/download-artifact@v4
#         with:
#           name: build-artifact

#       # Step 7: Decompress artifact
#       - name: Decompress artifact
#         run: unzip next.zip

#       # Step 8: Login to Azure
#       - name: Login to Azure
#         uses: azure/login@v2
#         with:
#           client-id: ${{ secrets.AZURE_CLIENT_ID}}
#           tenant-id: ${{ secrets.AZURE_TENANT_ID}}
#           subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID}}

#       # Step 9: Deploy to Azure Web App
#       - name: Deploy to Azure Web App
#         uses: azure/webapps-deploy@v3
#         id: deploy-to-webapp
#         with:
#           app-name: 'Eapp'
#           slot-name: 'Production'
#           package: 'next.zip'

name: Deploy to Azure App Service

on:
  push: 
    branches: 
      - main

jobs: 
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4
      - name: Setup Node.js version
        uses: actions/setup-node@v3
        with: 
          node-version: '20.x'
      - name: Install Dependencies
        run: npm install
      - name: Deploy to Azure App Service
        uses: azure/webapps-deploy@v2
        with:
          app-name: integrationninjas
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: .       
